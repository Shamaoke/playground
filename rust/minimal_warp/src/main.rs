
///
///                      ███            ███                          ████
///                     ▒▒▒            ▒▒▒                          ▒▒███
///      █████████████  ████ ████████  ████ █████████████    ██████  ▒███
///     ▒▒███▒▒███▒▒███▒▒███▒▒███▒▒███▒▒███▒▒███▒▒███▒▒███  ▒▒▒▒▒███ ▒███
///      ▒███ ▒███ ▒███ ▒███ ▒███ ▒███ ▒███ ▒███ ▒███ ▒███   ███████ ▒███
///      ▒███ ▒███ ▒███ ▒███ ▒███ ▒███ ▒███ ▒███ ▒███ ▒███  ███▒▒███ ▒███
///      █████▒███ ██████████████ ███████████████▒███ █████▒▒█████████████
///     ▒▒▒▒▒ ▒▒▒ ▒▒▒▒▒▒▒▒▒▒▒▒▒▒ ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒ ▒▒▒ ▒▒▒▒▒  ▒▒▒▒▒▒▒▒▒▒▒▒▒
///                 █████ ███ █████████████  ██████  ████████
///                ▒▒███ ▒███▒▒███▒▒███▒▒███▒▒▒▒▒███▒▒███▒▒███
///                 ▒███ ▒███ ▒███ ▒███ ▒▒▒  ███████ ▒███ ▒███
///                 ▒▒███████████  ▒███     ███▒▒███ ▒███ ▒███
///                  ▒▒████▒████   █████   ▒▒████████▒███████
///                   ▒▒▒▒ ▒▒▒▒   ▒▒▒▒▒     ▒▒▒▒▒▒▒▒ ▒███▒▒▒
///                                                  ▒███
///                                                  █████
///                                                 ▒▒▒▒▒
///

use warp::Filter;

#[tokio::main]
async fn main() {

  let index = warp::path::end().map(| | format!("index"));

  let users = warp::path("users").map(| | format!("users"));

  let routes = warp::get()
    .and(index)
    .or(users);

  warp::serve(routes).run(([127, 0, 0, 1], 1337)).await;

  // Create a _path_ filter
  // let index = warp::path("hello").map(| | format!("Hello!"));

  // Start a server and pass the filter to it
  // warp::serve(index).run(([127, 0, 0, 1], 1337)).await;

  // Get /hello/:name
  // let hello = warp::path("hello")
  //   .and(warp::path::param::<String>())
  //   .map(|name: String| format!("Hello, {}!", name));

  // warp::serve(hello)
  //   .run(([127, 0, 0, 1], 1337))
  //   .await;
}

